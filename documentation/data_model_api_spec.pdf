1
Portfolio Assignment: Final Project
Maria Anjelica Benitez
CS 493: Cloud Application Development, Spring 2021
Oregon State University
Last Update: June 06, 2021. 9:30pm Pacific
Project URL/Login & Create User: https://final-project-benitema.wl.r.appspot.com
Change log ..................................................................................................................................................... 1
Data Model .................................................................................................................................................... 2
Create a Credit Card ...................................................................................................................................... 3
List all Credit Cards ........................................................................................................................................ 7
Edit a Credit Card…………………………………………………………………………………………………………………………………10
Replace a Credit Card .................................................................................................................................. 15
Get a Credit Card ........................................................................................................................................ 20
Delete a Credit Card…………………………………………………………………………………………………………………………….23
Create an Order ........................................................................................................................................... 26
List all Orders ............................................................................................................................................... 29
Edit an Order……………………………………………………………………………………………………………………………….……….31
Replace an Order ......................................................................................................................................... 34
Get an Order ................................................................................................................................................ 37
Delete an Order…………………………………………………………………………………………………………………………………….39
Add an Order to a Credit Card……………………………………………………………………………………………………….……..41
Delete an Order from a Credit Card………………………………………………………………………………………………………44
Change log
Version
Change
Date
1.0
Initial version.
June 06, 2021
2
Data Model
Credit_Cards (PROTECTED, Requires valid JWT)
Property Name
Notes
id
The id of the credit card. Datastore automatically generates it. *Note: This is not the same as the credit card number
card_number
String. The credit card number, E.g., “1234567876543212”.
type
String. Type of the credit card, E.g., Visa, Mastercard, Discover, etc.
expiration
String. Credit card expiration date (format: “MM/YY”)
cvv_code
String. 3-digit cvv code of the credit card, E.g., “813”
Orders
Property Name
Notes
id
The id of the order. Datastore automatically generates it.
date_created
String. The date the order was created (format: “MM/DD/YY”)
order_total
Float. The order total in dollar amount, E.g., 199.99
status
String. Current status of the order, E.g., “waiting for payment”, “processing”, “ready to ship”, “shipped”, etc.
Card_Order
Property Name
Notes
relationship_id
The id of the card_order relationship. Datastore automatically generates it.
card_id
Int. The id of the card that is associated with the given order_id
orders
Array/Int. Contains the ids of all the orders that have been added to the credit card with the given card_id
3
Create a Credit Card
Allows you to create a new instance of the credit card entity.
POST /credit_cards
Request
Path Parameters
None
Request Body
Required
MIME Type Accepted by Endpoint (from Request Body) application/json
Request JSON Attributes Name Type Description Required? card_number String The credit card number. Must be unique across all credit cards. Yes type String The type of the credit card, E.g., Visa, Mastercard, Discover, etc.
Yes expiration String The credit card’s expiration date (format: “MM/YY”). Yes cvv_code String The credit card’s 3-digit cvv code. Yes
Request Body Example
{
"card_number": "377789345222109",
"type": "American Express",
"expiration": "08/22",
"cvv_code": "519"
}
4
Response
MIME Type Sent by Endpoint as Response application/json . . . . .
Response Statuses
Outcome
Status Code
Notes
Success
201 Created
Failure
400 Bad Request
If any of the following occur, the credit card must not be created, and a 400 status code must be returned:
• If the request is missing any of the 4 required attributes
• If the request contains an invalid attribute
Failure
401 Unauthorized
If any of the following occur, the credit card must not be created, and a 401 status code must be returned:
• If the request contains an invalid JWT
• If the JWT token is missing
Failure
403 Forbidden
If the card_number of the credit card is not unique across all credit cards, the credit card must not be created, and a 403 status code must be returned.
Failure
406 Not Acceptable
If the request does not include ‘application/json’ in the Accept header, the credit card must not be created, and a 406 status code must be returned.
Failure
415 Unsupported Media Type
Unsupported media type sent. Please use application/json with your request
Response Examples
• The self attribute will contain the live link to the REST resource corresponding to this credit. In other words, this is the URL to get this newly created credit card. Note that this resource is protected. This is not stored in Datastore.
• The owner attribute will contain the unique identifier of the user that created this instance of the credit card entity. In other words, this ID represents the relationship between the user and the credit_card. This is not stored in Datastore.
5
• The orders attribute will contain the list of orders associated with this credit_card. In other words, this property represents the relationship between the credit_card and one or multiple orders. This is not stored in Datastore.
Success
Status: 201 Created
{
"id": "abc123",
"owner": "auth0|def432"
"card_number": "377789345222109",
"type": "American Express",
"expiration": "08/22",
"cvv_code": "519",
"self": https://<my-app>/credit_cards/abc123,
"orders": []
}
Failure
Status: 400 Bad Request
{
"code": "Bad Request",
"description": "Missing attribute. The request object is missing at least one of the required attributes"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Bad Request",
"description": "Invalid attribute. The request contains an invalid attribute"
}
Failure
Status: 401 Unauthorized
{
"code": "invalid_header",
"description": "Invalid header. "Use an RS256 signed JWT Access Token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
6
{
"code": "token_expired",
"description": "token is expired"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_claims",
"description": "incorrect claims, please check the audience and issuer"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Unable to parse authentication token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "no_rsa_key",
"description": "No RSA key in JWKS"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Invalid header. JWT Access Token is missing"
}
Failure
Status: 403 Forbidden
{
"code": "Forbidden",
"description": "Card number not unique. This credit card number already exists. Please enter a different card number"
}
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Failure
Status: 415 Not Acceptable
{
7
"code": "Unsupported Media Type",
"description": "Unsupported Media Type. Please use application/json with your request"
}
List all Credit Cards
List all credit cards in the collection belonging to the user with a valid JWT. Implements pagination with a limit of 5 instances per page.
GET /credit_cards
Request Path Parameters None
Request Body None
Response MIME Type Sent by Endpoint as Response application/json
Response Statuses Outcome Status Code Notes Success 200 OK *Note: This is a protected resource. Only credit cards belonging to the verified user are returned. Failure 401 Unauthorized If any of the following occur, the credit cards collection must not be returned, and a 401 status code must be returned instead: • If the request contains an invalid JWT • If the JWT token is missing Failure 405 Method Not Allowed If any other methods are used besides ‘GET’ or ‘POST’, the request must be rejected, and a 405 status code must be returned. Failure 406 Not Acceptable If the request does not include ‘application/json’ in the Accept header, the credit cards collection must not be returned, and a 406 status code must be returned instead.
8
.
.
.
.
.
.
Response Examples
Success
Status: 200 OK
{
“credit_cards”: [
{
"id": "abc123",
"owner": "auth0|def432"
"card_number": "377789345222109",
"type": "American Express",
"expiration": "08/22",
"cvv_code": "519",
"self": https://<my-app>/credit_cards/abc123,
"orders": []
},
{
"id": "xyz567",
"owner": "auth0|def432"
"card_number": "345678233111654",
"type": "American Express",
"expiration": "02/23",
"cvv_code": "211",
"self": https://<my-app>/credit_cards/xyz567,
"orders": []
}
],
"items_in_collection": 2
}
Failure
Status: 401 Unauthorized
{
9
"code": "invalid_header",
"description": "Invalid header. "Use an RS256 signed JWT Access Token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "token_expired",
"description": "token is expired"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_claims",
"description": "incorrect claims, please check the audience and issuer"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Unable to parse authentication token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "no_rsa_key",
"description": "No RSA key in JWKS"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Invalid header. JWT Access Token is missing"
}
Failure
Status: 405 Method Not Allowed
{
"code": "method_not_allowed",
"description": "Method not allowed. Cannot delete or make changes to the /credit_cards URL"
}
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
10
Edit a Credit Card
Allows the user with a verified JWT to edit one or more attributes of an existing credit card. Card number must remain unique.
PATCH /credit_cards/:card_id
Request Path Parameters card_id
Request Body Required
MIME Type Accepted by Endpoint (from Request Body) application/json
Request JSON Attributes Name Type Description Required? card_number String The credit card number. Must be unique across all credit cards. Only if no other attributes in request body. type String The type of the credit card, E.g., Visa, Mastercard, Discover, etc.
Only if no other attributes in request body. expiration String The credit card’s expiration date (format: “MM/YY”). Only if no other attributes in request body. cvv_code String The credit card’s 3-digit cvv code. Only if no other attributes in request body.
Request Body Example
{
"cvv_code": "888",
}
11
Response MIME Type Sent by Endpoint as Response application/json
Response Statuses
Outcome
Status Code
Notes
Success
200
*Note: Only the user that created this credit card instance is able to modify it.
Failure
400 Bad Request
If either of the following occur, the credit card must not be modified, and a 400 status code must be returned:
• If the request is missing all of the attributes. In other words, if no valid attribute is in the request body.
• If the request contains an invalid attribute.
Failure
401 Unauthorized
If any of the following occur, the credit card must not be modified, and a 401 status code must be returned:
• If the request contains an invalid JWT
• If the JWT token is missing
Failure
403 Forbidden
If any of the following occur, the credit card must not be modified, and a 403 status code must be returned:
• If the card_number of the credit card is not unique across all credit cards
• If the user attempting to modify the credit card is not the owner
Failure
404 Not Found
If the card_id does not exist in the collection
Failure
406 Not Acceptable
If the request does not include ‘application/json’ in the Accept header, the credit card must not be modified, and a 406 status code must be returned.
Failure
415 Unsupported Media Type
Unsupported media type sent. Please use application/json with your request
.
.
12
.
Response Examples
Success
Status: 200 OK
{
"id": "abc123",
"owner": "auth0|def432"
"card_number": "377789345222109",
"type": "American Express",
"expiration": "08/22",
"cvv_code": "888",
"self": https://<my-app>/credit_cards/abc123,
"orders": []
}
Failure
Status: 400 Bad Request
{
"code": "Bad Request",
"description": "Bad request. No valid attributes to modify"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Bad Request",
"description": "Invalid attribute. The request contains an invalid attribute"
}
Failure
Status: 401 Unauthorized
{
"code": "invalid_header",
"description": "Invalid header. "Use an RS256 signed JWT Access Token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "token_expired",
"description": "token is expired"
}
----------------------------------------------------------------------------------------------------------------------------------------
13
{
"code": "invalid_claims",
"description": "incorrect claims, please check the audience and issuer"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Unable to parse authentication token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "no_rsa_key",
"description": "No RSA key in JWKS"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Invalid header. JWT Access Token is missing"
}
Failure
Status: 403 Forbidden
{
"code": "Forbidden",
"description": "Card number not unique. This credit card number already exists. Please enter a different card number"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Forbidden",
"description": "Forbidden. Only the owner of this credit card is authorized to edit it."
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Credit card not found. No credit_card with this credit_card_id exists"
14
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Failure
Status: 415 Not Acceptable
{
"code": "Unsupported Media Type",
"description": "Unsupported Media Type. Please use application/json with your request"
}
15
Replace a Credit Card
Allows the authorized user to replace an existing credit card, except for its id. Name must remain unique.
PUT /credit_cards/:card_id
Request Path Parameters card_id
Request Body Required
MIME Type Accepted by Endpoint (from Request Body) application/json
Request JSON Attributes Name Type Description Required? card_number String The credit card number. Must be unique across all credit cards. Yes type String The type of the credit card, E.g., Visa, Mastercard, Discover, etc.
Yes expiration String The credit card’s expiration date (format: “MM/YY”). Yes cvv_code String The credit card’s 3-digit cvv code. Yes
Request Body Example
{
"card_number": "4321567898762345",
"type": "Visa",
"expiration": "11/23",
"cvv_code": "217"
}
16
Response
MIME Type Sent by Endpoint as Response (After Redirection) application/json
Response Statuses
Outcome
Status Code
Notes
Success
200
*Note: Only the user that created this credit card instance is able to replace it.
Failure
400 Bad Request
If either of the following occur, the credit card must not be replaced, and a 400 status code must be returned:
• If the request is missing any of the 4 required attributes
• If the request contains an invalid attribute.
Failure
401 Unauthorized
If any of the following occur, the credit card must not be replaced, and a 401 status code must be returned:
• If the request contains an invalid JWT
• If the JWT token is missing
Failure
403 Forbidden
If any of the following occur, the credit card must not be replaced, and a 403 status code must be returned:
• If the card_number of the credit card is not unique across all credit cards
• If the user attempting to replace the credit card is not the owner
Failure
404 Not Found
If the card_id does not exist in the collection
Failure
406 Not Acceptable
If the request does not include ‘application/json’ in the Accept header, the credit card must not be replaced, and a 406 status code must be returned.
Failure
415 Unsupported Media Type
Unsupported media type sent. Please use application/json with your request
17
Response Examples
Success
Status: 200 OK
{
"id": "abc123",
"owner": "auth0|def432"
"card_number": "4321567898762345",
"type": "Visa",
"expiration": "11/23",
"cvv_code": "217",
"self": https://<my-app>/credit_cards/abc123,
"orders": []
}
Failure
Status: 400 Bad Request
{
"code": "Bad Request",
"description": "Missing attribute. The request object is missing at least one of the required attributes"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Bad Request",
"description": "Invalid attribute. The request contains an invalid attribute"
}
Failure
Status: 401 Unauthorized
{
"code": "invalid_header",
"description": "Invalid header. "Use an RS256 signed JWT Access Token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "token_expired",
"description": "token is expired"
}
----------------------------------------------------------------------------------------------------------------------------------------
18
{
"code": "invalid_claims",
"description": "incorrect claims, please check the audience and issuer"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Unable to parse authentication token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "no_rsa_key",
"description": "No RSA key in JWKS"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Invalid header. JWT Access Token is missing"
}
Failure
Status: 403 Forbidden
{
"code": "Forbidden",
"description": "Card number not unique. This credit card number already exists. Please enter a different card number"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Forbidden",
"description": "Forbidden. Only the owner of this credit card is authorized to edit it."
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Credit card not found. No credit_card with this credit_card_id exists"
19
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Failure
Status: 415 Not Acceptable
{
"code": "Unsupported Media Type",
"description": "Unsupported Media Type. Please use application/json with your request"
}
20
Get a Credit Card
Allows the authorized user to get a credit card with the given card_id.
GET /credit_cards/:card_id
Request Path Parameters card_id
Request Body None
Response
MIME Type Sent by Endpoint as Response
application/json
Response Statuses Outcome Status Code Notes Success 200 OK *Note: Only the user that created this credit card instance is able to view it. Failure 401 Unauthorized If any of the following occur, the credit card must not be returned, and a 401 status code must be returned instead: • If the request contains an invalid JWT • If the JWT token is missing Failure 403 Forbidden If the user is not authorized to view the protected credit_card Failure 404 Not Found card_id does not exist in the collection Failure 406 Not Acceptable Only text/html or application/json content types supported
21
.
.
.
.
.
.
Response Examples
Success
Status: 200 OK
{
"id": "abc123",
"owner": "auth0|def432"
"card_number": "4321567898762345",
"type": "Visa",
"expiration": "11/23",
"cvv_code": "217",
"self": https://<my-app>/credit_cards/abc123,
"orders": []
}
Failure
Status: 401 Unauthorized
{
"code": "invalid_header",
"description": "Invalid header. "Use an RS256 signed JWT Access Token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "token_expired",
"description": "token is expired"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_claims",
"description": "incorrect claims, please check the audience and issuer"
22
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Unable to parse authentication token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "no_rsa_key",
"description": "No RSA key in JWKS"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Invalid header. JWT Access Token is missing"
}
Failure
Status: 403 Forbidden
{
"code": "Forbidden",
"description": "Forbidden. Only the owner of this credit card is authorized to view it."
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Credit card not found. No credit_card with this credit_card_id exists"
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
23
Delete a Credit Card
Allows the authorized user to delete a credit card.
DELETE /credit_cards/:card_id
Request Path Parameters card_id
Request Body None
Response No body
Response Body Format
Success:
No body
Failure:
MIME Type Sent by Endpoint as Response
application/json
Response Statuses Outcome Status Code Notes Success 204 No Content *Note: Only the user that created this credit card instance is able to delete it. Failure 401 Unauthorized If any of the following occur, the credit card must not be deleted, and a 401 status code must be returned instead: • If the request contains an invalid JWT • If the JWT token is missing Failure 403 Forbidden If the user is not authorized to delete the protected credit_card Failure 404 Not Found No credit card with this card_id exists
24
Response Examples
Success
Status: 204 No Content
Failure
Status: 401 Unauthorized
{
"code": "invalid_header",
"description": "Invalid header. "Use an RS256 signed JWT Access Token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "token_expired",
"description": "token is expired"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_claims",
"description": "incorrect claims, please check the audience and issuer"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Unable to parse authentication token"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "no_rsa_key",
"description": "No RSA key in JWKS"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "invalid_header",
"description": "Invalid header. JWT Access Token is missing"
}
.
.
25
Failure
Status: 403 Forbidden
{
"code": "Forbidden",
"description": "Forbidden. Only the owner of this credit card is authorized to delete it."
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Credit card not found. No credit_card with this credit_card_id exists"
}
26
Create an Order
Allows you to create a new instance of the order entity.
POST /orders
Request
Path Parameters
None
Request Body
Required
MIME Type Accepted by Endpoint (from Request Body) application/json
Request JSON Attributes Name Type Description Required? date_created String The date the order was created (format: “MM/DD/YY”) Yes order_total Float The order total in dollar amount, E.g., 199.99 Yes status String Current status of the order, E.g., “waiting for payment”, “processing”, “ready to ship”, “shipped”, etc. Yes
Request Body Example
{
"date_created": "12/20/20",
"order_total": 257.25,
"status": "shipped"
}
Response
MIME Type Sent by Endpoint as Response application/json . . . . . . . .
27
Response Statuses
Outcome
Status Code
Notes
Success
201 Created
Failure
400 Bad Request
If any of the following occur, the credit card must not be created, and a 400 status code must be returned:
• If the request is missing any of the 3 required attributes
• If the request contains an invalid attribute
Failure
406 Not Acceptable
If the request does not include ‘application/json’ in the Accept header, the credit card must not be created, and a 406 status code must be returned.
Failure
415 Unsupported Media Type
Unsupported media type sent. Please use application/json with your request
Response Examples
• The self attribute will contain the live link to the REST resource corresponding to this order. In other words, this is the URL to get this newly created order. This is not stored in Datastore.
• The credit_card_id attribute will contain credit card associated with this order. In other words, this property represents the relationship between the an order and a credit card. This is not stored in Datastore.
Success
Status: 201 Created
{
"date_created": "12/20/20",
"order_total": 257.25,
"status": "shipped",
"id": ghi333,
"self": "https://<my-app>/orders/ghi333",
"credit_card_id": null
}
.
.
.
.
.
28
Failure
Status: 400 Bad Request
{
"code": "Bad Request",
"description": "Missing attribute. The request object is missing at least one of the required attributes"
}
-------------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Bad Request",
"description": "Invalid attribute. The request contains an invalid attribute"
}
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Failure
Status: 415 Not Acceptable
{
"code": "Unsupported Media Type",
"description": "Unsupported Media Type. Please use application/json with your request"
}
29
List all Orders
List all orders in the collection. Implements pagination with a limit of 5 instances per page.
GET /orders
Request Path Parameters None
Request Body None
Response MIME Type Sent by Endpoint as Response application/json
Response Statuses Outcome Status Code Notes Success 200 OK Failure 405 Method Not Allowed If any other methods are used besides ‘GET’ or ‘POST’, the request must be rejected, and a 405 status code must be returned. Failure 406 Not Acceptable If the request does not include ‘application/json’ in the Accept header, the orders collection must not be returned, and a 406 status code must be returned instead.
.
.
.
.
.
.
.
.
.
.
.
30
Response Examples
Success
Status: 200 OK
{
"orders": [
{
"date_created": "12/20/20",
"status": "shipped",
"order_total": 257.25,
"id": ghi333,
"self": "https://<my-app>/orders/ghi333",
"credit_card_id": null
},
{
"date_created": "06/04/21",
"status": "waiting for payment",
"order_total": 19.99,
"id": lmn009,
"self": "https://<my-app>/orders/lmn009",
"credit_card_id": null
}
],
"items_in_collection": 2
}
Failure
Status: 405 Method Not Allowed
{
"code": "method_not_allowed",
"description": "Method not allowed. Cannot delete or make changes to the /credit_cards URL"
}
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
31
Edit an Order
Edit one or more attributes of an existing order.
PATCH /orders/:order_id
Request Path Parameters order_id
Request Body Required
MIME Type Accepted by Endpoint (from Request Body) application/json
Request JSON Attributes Name Type Description Required? date_created String The date the order was created (format: “MM/DD/YY”) Only if no other attributes in request body. order_total Float The order total in dollar amount, E.g., 199.99 Only if no other attributes in request body. status String Current status of the order, E.g., “waiting for payment”, “processing”, “ready to ship”, “shipped”, etc. Only if no other attributes in request body.
Request Body Example
{
"order_total ": 26.99,
}
.
.
.
.
32
Response MIME Type Sent by Endpoint as Response application/json
Response Statuses
Outcome
Status Code
Notes
Success
200
Failure
400 Bad Request
If either of the following occur, the order must not be modified, and a 400 status code must be returned:
• If the request is missing all of the attributes. In other words, if no valid attribute is in the request body.
• If the request contains an invalid attribute.
Failure
404 Not Found
If the order_id does not exist in the collection
Failure
406 Not Acceptable
If the request does not include ‘application/json’ in the Accept header, the order must not be modified, and a 406 status code must be returned.
Failure
415 Unsupported Media Type
Unsupported media type sent. Please use application/json with your request
.
.
.
Response Examples
Success
Status: 200 OK
{
"date_created": "12/20/20",
"status": "shipped",
"order_total": 26.99,
"id": ghi333,
"self": "https://<my-app>/orders/ghi333",
"credit_card_id": null
}
33
Failure
Status: 400 Bad Request
{
"code": "Bad Request",
"description": "Bad request. No valid attributes to modify"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Bad Request",
"description": "Invalid attribute. The request contains an invalid attribute"
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Order not found. No order with this order_id exists"
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Failure
Status: 415 Not Acceptable
{
"code": "Unsupported Media Type",
"description": "Unsupported Media Type. Please use application/json with your request"
}
34
Replace an Order
Replace all attributes of an existing order.
PUT /orders/:order_id
Request Path Parameters order_id
Request Body Required
MIME Type Accepted by Endpoint (from Request Body) application/json
Request JSON Attributes Name Type Description Required? date_created String The date the order was created (format: “MM/DD/YY”) Yes order_total Float The order total in dollar amount, E.g., 199.99 Yes status String Current status of the order, E.g., “waiting for payment”, “processing”, “ready to ship”, “shipped”, etc. Yes
Request Body Example
{
"date_created": "02/25/21",
"status": "ready to ship",
"order_total": 159.99,
}
.
.
.
.
35
Response
MIME Type Sent by Endpoint as Response (After Redirection) application/json
Response Statuses
Outcome
Status Code
Notes
Success
200
Failure
400 Bad Request
If either of the following occur, the order must not be replaced, and a 400 status code must be returned:
• If the request is missing any of the 3 required attributes
• If the request contains an invalid attribute.
Failure
404 Not Found
If the order_id does not exist in the collection
Failure
406 Not Acceptable
If the request does not include ‘application/json’ in the Accept header, the order must not be replaced, and a 406 status code must be returned.
Failure
415 Unsupported Media Type
Unsupported media type sent. Please use application/json with your request
Response Examples
Success
Status: 200 OK
{
"date_created": "02/25/21",
"status": "ready to ship",
"order_total": 159.99,
"id": ghi333,
"self": "https://<my-app>/orders/ghi333",
"credit_card_id": null
}
.
.
36
Failure
Status: 400 Bad Request
{
"code": "Bad Request",
"description": "Missing attribute. The request object is missing at least one of the required attributes"
}
----------------------------------------------------------------------------------------------------------------------------------------
{
"code": "Bad Request",
"description": "Invalid attribute. The request contains an invalid attribute"
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Order not found. No order with this order_id exists"
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Failure
Status: 415 Not Acceptable
{
"code": "Unsupported Media Type",
"description": "Unsupported Media Type. Please use application/json with your request"
}
37
Get an Order
Get an order with the given order_id.
GET /orders/:order_id
Request Path Parameters order_id
Request Body None
Response
MIME Type Sent by Endpoint as Response
application/json
Response Statuses Outcome Status Code Notes Success 200 OK Failure 404 Not Found order_id does not exist in the collection Failure 406 Not Acceptable Only text/html or application/json content types supported
Response Examples
Success
Status: 200 OK
{
"date_created": "02/25/21",
"status": "ready to ship",
"order_total": 159.99,
"id": ghi333,
"self": "https://<my-app>/orders/ghi333",
"credit_card_id": null
}
.
38
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Order not found. No order with this order_id exists"
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
39
Delete an Order
Delete an existing order.
DELETE /orders/:order_id
Request Path Parameters order_id
Request Body None
Response No body
Response Body Format
Success:
No body
Failure:
MIME Type Sent by Endpoint as Response
application/json
Response Statuses Outcome Status Code Notes Success 204 No Content Failure 404 Not Found No order with this order_id exists
Response Examples
Success
Status: 204 No Content
.
.
.
.
40
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Order not found. No order with this order_id exists"
}
41
Add Order to a Credit Card
An order is added to a credit card, creating a relationship between the two entities.
PUT /credit_cards/:card_id/orders/:order_id
Request
Path Parameters card_id
order_id
Request Body
None
Response
MIME Type Sent by Endpoint as Response
application/json
Response Statuses Outcome Status Code Notes Success 200 OK Succeeds only if a credit card exists with this card_id, an order exists with this order_id, and the order is not already on a credit card. Failure 403 Forbidden If the order is already on a credit card. Failure 404 Not Found The specified credit card and/or order does not exist. Failure 406 Not Acceptable Only text/html or application/json content types supported
.
.
.
.
.
42
Response Examples
Success
Status: 200 OK
{
"card_id": abc123,
"orders": [
ghi333
],
"relationship_id": aaa999,
"self": http://localhost:8080/credit_cards/abc123/orders/ghi333
}
Failure
Status: 403 Forbidden
{
"code": "Forbidden",
"description": "Forbidden. This order has already been added to an existing credit card"
}
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Not found. The specified credit card and/or order does not exist"
}
.
.
.
.
.
43
Failure
Status: 406 Not Acceptable
{
"code": "Not Acceptable",
"description": "Not acceptable. Only application/json content type supported"
}
Comment
• An order cannot be assigned to multiple credit cards.
44
Remove Order from a Credit Card
An order is removed from a credit card (the relationship between the two is deleted without deleting either the credit card or the order).
DELETE /credit_cards/:card_id/orders/:order_id
Request
Path Parameters
card_id
order_id
Request Body
None
Response
No body
Response Body Format
Success: No body
Failure:
MIME Type Sent by Endpoint as Response
application/json
Response Statuses Outcome Status Code Notes Success 204 No Content Succeeds only if a credit card exists with this card_id, an order exists with this order_id and this order is on this credit card.
45
Failure 404 Not Found No load with this order_id is on a credit card with this card_id.
Response Examples
Success
Status: 204 No Content
Failure
Status: 404 Not Found
{
"code": "Not Found",
"description": "Not found. The specified credit card and/or order does not exist"
}
